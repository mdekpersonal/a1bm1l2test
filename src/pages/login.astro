---
import Layout from '../layouts/Layout.astro';
---


<Layout title="Connexion Étudiant" description="Connectez-vous pour accéder au cours de français.">
  <div class="login-container">
    <h1>Connexion Étudiant</h1>
    <form id="login-form" autocomplete="off">
      <label for="username">Nom d'utilisateur</label>
      <input type="text" id="username" name="username" required autocomplete="off" />
      <label for="password">Mot de passe</label>
      <input type="password" id="password" name="password" required autocomplete="off" />
      <button type="submit" class="btn btn-large">Se connecter</button>
      <div id="login-error" class="login-error"></div>
    </form>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('login-form');
    if (!form) return;
    
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const usernameInput = document.getElementById('username') as HTMLInputElement;
      const passwordInput = document.getElementById('password') as HTMLInputElement;
      const errorElem = document.getElementById('login-error');
      const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      
      if (!usernameInput || !passwordInput) {
        if (errorElem) errorElem.innerText = 'Erreur du formulaire.';
        return;
      }
      
      const username = usernameInput.value;
      const password = passwordInput.value;
      
      // Show loading state
      if (submitButton) {
        submitButton.textContent = 'Connexion...';
        submitButton.disabled = true;
      }
      
      try {
        const response = await fetch('/api/check-login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ username, password }),
        });
        
        const result = await response.json();
        
        if (result.success) {
          // Store login state
          localStorage.setItem('loggedIn', 'true');
          localStorage.setItem('username', username);
          window.location.href = '/';
        } else {
          if (errorElem) errorElem.innerText = 'Identifiants incorrects';
        }
      } catch (error) {
        console.error('Login error:', error);
        if (errorElem) errorElem.innerText = 'Erreur de connexion. Veuillez réessayer.';
      } finally {
        // Reset button state
        if (submitButton) {
          submitButton.textContent = 'Se connecter';
          submitButton.disabled = false;
        }
      }
    });
  });
</script>

<style>
.login-container {
  max-width: 400px;
  margin: 4rem auto;
  background: white;
  padding: 2rem;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-lg);
  text-align: center;
}
.login-container h1 {
  margin-bottom: 2rem;
}
.login-container label {
  display: block;
  margin-bottom: 0.5rem;
  text-align: left;
}
.login-container input {
  width: 100%;
  padding: 0.75rem;
  margin-bottom: 1rem;
  border-radius: 4px;
  border: 1px solid var(--color-border);
}
.login-error {
  color: red;
  margin-top: 1rem;
  min-height: 1.5rem;
}
</style>
